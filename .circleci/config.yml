version: 2.1

orbs:
    docker: circleci/docker@2.8.2

jobs:
    phpunit:
        docker:
            - image: cimg/php:8.4-node
              environment:
                  MYSQL_HOST: 127.0.0.1
                  MYSQL_USER: toohga
                  MYSQL_PASSWORD: superPassword
                  MYSQL_DATABASE: toohga
                  REDIS_HOST: 127.0.0.1
                  ADMIN_KEY: exampleAdmin
                  JWT_SECRET: superSecret
                  TGA_CONTACT_EMAIL: toohga@example.com
                  TGA_PRIVACY_URL: https://example.com/toohga-privacy
            - image: cimg/mariadb:11.7
              environment:
                  MYSQL_ROOT_PASSWORD: superRootPassword
                  MYSQL_USER: toohga
                  MYSQL_PASSWORD: superPassword
                  MYSQL_DATABASE: toohga
            - image: cimg/redis:8.0
        steps:
            # Checkout branch
            - checkout

            # Manually install PHP extensions
            - run: |
                  echo "" | sudo pecl install redis xdebug

            # Install Composer dependencies
            - restore_cache:
                  key: composer-{{ checksum "composer.json" }}
            - run: composer install
            - save_cache:
                  key: composer-{{ checksum "composer.json" }}
                  paths:
                      - vendor

            # Initialize database
            - run: php dbinit.php

            # Run tests with PHPUnit
            - run: composer run test:ci

            # Save test results
            - store_test_results:
                  path: test-results

            # Save coverage report
            - store_artifacts:
                  path: coverage/coverage-report
    phpstan:
        docker:
            - image: cimg/php:8.4
        steps:
            # Checkout branch
            - checkout

            # Install Composer dependencies
            - restore_cache:
                  key: composer-{{ checksum "composer.json" }}
            - run: composer install --ignore-platform-reqs
            - save_cache:
                  key: composer-{{ checksum "composer.json" }}
                  paths:
                      - vendor

            # Create result folder
            - run: mkdir -p test-results/phpstan-result

            # Run code analysis with PHPStan
            - run: composer code-analyze-save-report

            # Save code analysis results
            - store_test_results:
                  path: test-results
    phpcs:
        docker:
            - image: cimg/php:8.4
        steps:
            # Checkout branch
            - checkout

            # Install Composer dependencies
            - restore_cache:
                  key: composer-{{ checksum "composer.json" }}
            - run: composer install --ignore-platform-reqs
            - save_cache:
                  key: composer-{{ checksum "composer.json" }}
                  paths:
                      - vendor

            # Create result folder
            - run: mkdir -p test-results/phpcs-result

            # Run code style check with PHP_CodeSniffer
            - run: composer check-format-save-report

            # Save code style check results
            - store_test_results:
                  path: test-results

workflows:
    tests:
        jobs:
            - phpunit
            - phpstan
            - phpcs
    docker-publish:
        jobs:
            - docker/publish:
                  filters:
                      tags:
                          only: /.*/
                      branches:
                          ignore: /.*/
                  registry: ghcr.io
                  image: $CIRCLE_PROJECT_USERNAME/toohga
                  tag: "$CIRCLE_TAG,latest"
